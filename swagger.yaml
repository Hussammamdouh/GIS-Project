openapi: 3.0.0
info:
  title: LocalFindr API
  version: 1.0.0
  description: API for managing and discovering places

servers:
  - url: http://localhost:5000
    description: Development server

components:
  schemas:
    Place:
      type: object
      required:
        - name
        - category
        - location
      properties:
        name:
          type: string
          example: "Coffee Shop"
        category:
          type: string
          example: "cafe"
        location:
          type: object
          properties:
            type:
              type: string
              enum: [Point]
              example: "Point"
            coordinates:
              type: array
              items:
                type: number
              example: [55.2708, 25.2048]
    Error:
      type: object
      properties:
        message:
          type: string
          example: "Error message"

paths:
  /api/places:
    post:
      summary: Create a new place
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Place'
      responses:
        '201':
          description: Place created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Place'
    get:
      summary: Get all places
      responses:
        '200':
          description: List of places
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Place'

  /api/places/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
    get:
      summary: Get place by ID
      responses:
        '200':
          description: Place details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Place'
    put:
      summary: Update place
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Place'
      responses:
        '200':
          description: Place updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Place'
    delete:
      summary: Delete place
      responses:
        '200':
          description: Place deleted successfully

  /api/places/nearby:
    get:
      summary: Get nearby places
      parameters:
        - name: lat
          in: query
          required: true
          schema:
            type: number
            example: 25.2048
        - name: lng
          in: query
          required: true
          schema:
            type: number
            example: 55.2708
        - name: category
          in: query
          required: true
          schema:
            type: string
            example: "cafe"
        - name: radius
          in: query
          required: true
          schema:
            type: number
            example: 5
      responses:
        '200':
          description: List of nearby places
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Place'

  /api/places/{id}/distance:
    get:
      summary: Calculate distance to place
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: lat
          in: query
          required: true
          schema:
            type: number
            example: 25.2048
        - name: lng
          in: query
          required: true
          schema:
            type: number
            example: 55.2708
      responses:
        '200':
          description: Distance in meters
          content:
            application/json:
              schema:
                type: object
                properties:
                  distanceInMeters:
                    type: number
                    example: 150.5

  /api/google/search:
    get:
      summary: Search nearby places using Google Places API
      description: Returns the 5 nearest places from Google Places API with distance information
      parameters:
        - name: lat
          in: query
          required: true
          schema:
            type: number
            example: 30.5833
        - name: lng
          in: query
          required: true
          schema:
            type: number
            example: 32.2667
        - name: type
          in: query
          required: true
          schema:
            type: string
            example: "restaurant"
            description: "Type of place to search for (e.g., restaurant, cafe, school)"
      responses:
        '200':
          description: List of 5 nearest places with distance information
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      example: "Suez Canal University"
                    place_id:
                      type: string
                    geometry:
                      type: object
                      properties:
                        location:
                          type: object
                          properties:
                            lat:
                              type: number
                              example: 30.5833
                            lng:
                              type: number
                              example: 32.2667
                    rating:
                      type: number
                      example: 4.5
                    distance:
                      type: number
                      example: 0.5
                      description: "Distance in kilometers from the search location"

  /api/google/favorites:
    post:
      summary: Add place to favorites
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - userId
                - placeId
                - name
                - category
                - location
              properties:
                userId:
                  type: string
                  example: "user123"
                placeId:
                  type: string
                  example: "ChIJN1t_tDeuEmsRUsoyG83frY4"
                name:
                  type: string
                  example: "Test Restaurant"
                category:
                  type: string
                  example: "restaurant"
                location:
                  type: object
                  properties:
                    type:
                      type: string
                      enum: [Point]
                      example: "Point"
                    coordinates:
                      type: array
                      items:
                        type: number
                      example: [55.2708, 25.2048]
      responses:
        '201':
          description: Place added to favorites
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Place'

  /api/google/favorites/{userId}:
    get:
      summary: Get user's favorite places
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
            example: "user123"
      responses:
        '200':
          description: List of favorite places
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Place'
